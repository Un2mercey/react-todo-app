{"version":3,"sources":["resources/reportWebVitals.ts","app/redux/types.ts","app/redux/actions.ts","app/redux/store.ts","app/components/todo-item/TodoItem.tsx","app/components/todo-list/TodoList.tsx","app/components/new-todo-form/NewTodoForm.tsx","app/components/loader/Loader.tsx","app/core/Core.tsx","app/redux/reducers/todo.ts","app/data/todos.ts","app/redux/reducers/root.ts","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","LOADING","CREATE_TODO_ITEM","DELETE_TODO_ITEM","CHANGE_TODO_ITEM_CHECKBOX","appLoading","isLoading","type","payload","createTodoItem","item","preloadedState","TodoItem","btnDeleteHandler","event","preventDefault","props","deleteTodoItem","checkboxHandler","changeTodoItemCheckbox","target","checked","render","className","Checkbox","defaultChecked","isDone","onChange","title","description","Fab","color","size","onClick","React","Component","mapDispatchToProps","isChecked","connect","TodoList","renderItems","_","map","todos","todo","index","state","todoReducer","NewTodoForm","btnSaveHandler","console","log","setState","btnFetchHandler","fetchTodos","iputChangeHandler","prev","value","onSubmit","Input","placeholder","variant","dispatch","a","setTimeout","fetch","response","json","data","forEach","completed","newTodo","catch","error","finally","Loader","Core","initialState","loading","find","filter","idx","findIndex","rootReducer","combineReducers","action","middleware","thunk","logger","store","createStore","composeWithDevTools","applyMiddleware","app","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.476d51df.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);  \r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n}\r\n\r\nexport default reportWebVitals;\r\n","export const LOADING = 'APP/LOADING';\r\nexport const CREATE_TODO_ITEM = 'TODO/CREATE_TODO_ITEM';\r\nexport const DELETE_TODO_ITEM = 'TODO/DELETE_TODO_ITEM';\r\nexport const CHANGE_TODO_ITEM_CHECKBOX = 'TODO/CHANGE_TODO_ITEM_CHECKBOX';\r\n","import { ITodoItem } from '../models/todo-item';\r\nimport { CHANGE_TODO_ITEM_CHECKBOX, CREATE_TODO_ITEM, DELETE_TODO_ITEM, LOADING } from './types';\r\nimport { IBaseAppAction } from '../models/base-app.action';\r\nimport { Dispatch } from 'redux';\r\nimport { IFetchTodosResponseItem } from '../models/fetch-todos-response-item';\r\nimport _ from 'underscore';\r\n\r\n\r\nexport function appLoading(isLoading: boolean): IBaseAppAction {\r\n    return {\r\n        type: LOADING,\r\n        payload: isLoading\r\n    };\r\n}\r\n\r\nexport function createTodoItem(item: ITodoItem): IBaseAppAction {\r\n    return {\r\n        type: CREATE_TODO_ITEM,\r\n        payload: item\r\n    };\r\n}\r\n\r\nexport function deleteTodoItem(item: ITodoItem): IBaseAppAction {\r\n    return {\r\n        type: DELETE_TODO_ITEM,\r\n        payload: item\r\n    };\r\n}\r\n\r\nexport function changeTodoItemCheckbox(item: ITodoItem, isChecked: boolean): IBaseAppAction {\r\n    return {\r\n        type: CHANGE_TODO_ITEM_CHECKBOX,\r\n        payload: { item: item, isChecked: isChecked }\r\n    };\r\n}\r\n\r\n\r\nexport const fetchTodos = () => async (dispatch: Dispatch<any>) => {\r\n    dispatch(appLoading(true));\r\n    await setTimeout(() => {\r\n        fetch('https://jsonplaceholder.typicode.com/todos?_limit=50')\r\n            .then((response: Response) => response.json())\r\n            .then((data: Array<IFetchTodosResponseItem>) => {\r\n                _.forEach(_.map(data, (item: IFetchTodosResponseItem): ITodoItem => {\r\n                    return {\r\n                        title: item.title,\r\n                        description: 'Fetched todo from jsonplaceholder',\r\n                        isDone: item.completed\r\n                    };\r\n                }), (newTodo: ITodoItem) => { dispatch(createTodoItem(newTodo)); });\r\n            })\r\n            .catch((error: any) => dispatch(appLoading(false)))\r\n            .finally(() => dispatch(appLoading(false)));\r\n    }, 3000);\r\n};\r\n","import { applyMiddleware, createStore, Middleware, Store } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { rootReducer } from './reducers/root';\r\n\r\n\r\nconst middleware: Array<Middleware> = [thunk, logger];\r\n\r\nconst configureStore = (preloadedState: any): Store => (\r\n    createStore(\r\n        rootReducer,\r\n        preloadedState,\r\n        composeWithDevTools(applyMiddleware(...middleware))\r\nÂ    )\r\n);\r\n\r\nexport const store: Store = configureStore({});\r\n","import React from 'react';\r\nimport { Checkbox, Fab } from '@material-ui/core';\r\nimport DeleteSweepIcon from '@material-ui/icons/DeleteSweep';\r\nimport { connect } from 'react-redux';\r\nimport { deleteTodoItem, changeTodoItemCheckbox } from '../../redux/actions';\r\nimport { ITodoItemProps } from '../../models/todo-item.props';\r\n\r\n\r\nclass TodoItem extends React.Component<ITodoItemProps> {\r\n\r\n    public btnDeleteHandler = (event: React.MouseEvent<HTMLButtonElement>): void => {\r\n        event.preventDefault();\r\n        this.props.deleteTodoItem(this.props.props);\r\n    }\r\n\r\n    public checkboxHandler = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n        this.props.changeTodoItemCheckbox(this.props.props, event.target.checked);\r\n    }\r\n\r\n    public render = (): JSX.Element => {\r\n        return (\r\n            <div className=\"todo-item\">\r\n                <div className=\"container\">\r\n                    <div className=\"title\">\r\n                        <Checkbox\r\n                          defaultChecked={ this.props.props.isDone }\r\n                          onChange={ this.checkboxHandler } />\r\n                        <span className=\"label\">\r\n                            { this.props.props.title }\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"description\">{ this.props.props.description }</div>\r\n                </div>\r\n                <Fab\r\n                  color=\"secondary\"\r\n                  size=\"small\"\r\n                  className=\"btn-delete\"\r\n                  onClick={ this.btnDeleteHandler }>\r\n                    <DeleteSweepIcon className=\"icon icon-delete-item\" />\r\n                </Fab>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    deleteTodoItem,\r\n    changeTodoItemCheckbox\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(TodoItem)\r\n","import _ from 'underscore';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport TodoItem from '../todo-item/TodoItem';\r\nimport { IAppState } from '../../models/app.state';\r\nimport { ITodoItem } from '../../models/todo-item';\r\nimport { ITodoListProps } from './../../models/todo-list.props';\r\nimport { IRootState } from '../../models/root.state';\r\n\r\n\r\nclass TodoList extends React.Component<ITodoListProps | any> {\r\n\r\n    public renderItems = (): Array<JSX.Element> => {\r\n        return _.map(this.props.todos, (todo: ITodoItem, index: number) => (\r\n            <TodoItem props={ todo } key={ index }/>\r\n        ));\r\n    }\r\n\r\n    public render = (): JSX.Element => {\r\n        return (\r\n            <div className=\"todo-list\">\r\n                { this.renderItems() }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: IRootState): IAppState => {\r\n    return state.todoReducer;\r\n}\r\n\r\nexport default connect(mapStateToProps)(TodoList);","import React from 'react';\r\nimport Button from '@material-ui/core/Button/Button';\r\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\r\nimport PostAddIcon from '@material-ui/icons/PostAdd';\r\nimport Input from '@material-ui/core/Input';\r\nimport { INewTodoFormState } from '../../models/new-todo-form.state';\r\nimport { connect } from 'react-redux';\r\nimport { createTodoItem, fetchTodos } from '../../redux/actions';\r\nimport { INewTodoFormProps } from '../../models/new-todo-form.props';\r\n\r\n\r\nclass NewTodoForm extends React.Component<INewTodoFormProps | any> {\r\n\r\n    public state: INewTodoFormState = { title: '' };\r\n\r\n    public btnSaveHandler = (event: React.SyntheticEvent<EventTarget>) => {\r\n        console.log(this);\r\n        event.preventDefault();\r\n        this.props.createTodoItem({\r\n            title: this.state.title,\r\n            description: 'without descr',\r\n            isDone: false\r\n        });\r\n        this.setState({title: ''});\r\n    }\r\n\r\n    public btnFetchHandler = (event: React.MouseEvent<HTMLElement>) => {\r\n        this.props.fetchTodos();\r\n    }\r\n\r\n    public iputChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setState((prev: INewTodoFormState) => ({\r\n            ...prev,\r\n            ...{ title: event.target.value }\r\n        }));\r\n    }\r\n\r\n    public render = (): JSX.Element => {\r\n        return (\r\n            <form className=\"new-todo-form\" onSubmit={ this.btnSaveHandler } >\r\n                <Input\r\n                  className=\"new-todo-form-input\"\r\n                  type=\"text\"\r\n                  placeholder=\"Enter a name of new todo item...\"\r\n                  onChange={ this.iputChangeHandler }\r\n                  value={ this.state.title }\r\n                />\r\n                <div className=\"button-block\">\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      className=\"btn-save\"\r\n                      onClick={ this.btnSaveHandler }>\r\n                        Save\r\n                        <PostAddIcon className=\"icon post-add-icon\" />\r\n                    </Button>\r\n                    <Button variant=\"contained\" className=\"btn-fetch\" onClick={ this.btnFetchHandler }>\r\n                        Fetch\r\n                        <CloudDownloadIcon className=\"icon cloud-download-icon\" />\r\n                    </Button>\r\n                </div>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = {\r\n    createTodoItem,\r\n    fetchTodos\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(NewTodoForm);","import React from \"react\";\r\nimport { IRootState } from '../../models/root.state';\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nclass Loader extends React.Component<{ isLoading: boolean } | any> {\r\n\r\n    public render = (): JSX.Element => {\r\n        return this.props.isLoading ? (\r\n            <div className=\"lds-ring\">\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n        ) : <></>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: IRootState): { isLoading: boolean } => {\r\n    return { isLoading: state.todoReducer.isLoading };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Loader);","import React from 'react';\r\nimport TodoList from '../components/todo-list/TodoList';\r\nimport NewTodoForm from '../components/new-todo-form/NewTodoForm';\r\nimport Loader from './../components/loader/Loader';\r\n\r\n\r\nexport class Core extends React.Component {\r\n\tpublic render = (): JSX.Element => {\r\n\t\treturn (<>\r\n            <Loader />\r\n            <h1>TODO React Application</h1>\r\n            <NewTodoForm />\r\n            <TodoList />\r\n        </>);\r\n\t};\r\n}\r\n","import _ from 'underscore';\r\nimport { todos } from '../../data/todos';\r\nimport { IAppState } from '../../models/app.state';\r\nimport { CREATE_TODO_ITEM, DELETE_TODO_ITEM, CHANGE_TODO_ITEM_CHECKBOX, LOADING } from '../types';\r\nimport { ITodoItem } from '../../models/todo-item';\r\nimport { IBaseAppAction } from '../../models/base-app.action';\r\nimport { ICheckboxActionPayload } from '../../models/checkbox.action.payload';\r\n\r\n\r\nconst initialState: IAppState = { todos: todos, isLoading: false };\r\n\r\nexport const todoReducer = (state: IAppState = initialState, action: IBaseAppAction): IAppState => {\r\n    switch (action.type) {\r\n        case LOADING:\r\n            return loading(state, action.payload as boolean);\r\n        case CREATE_TODO_ITEM:\r\n            return createTodoItem(state, action.payload as ITodoItem);\r\n        case DELETE_TODO_ITEM:\r\n            return deleteTodoItem(state, action.payload as ITodoItem);\r\n        case CHANGE_TODO_ITEM_CHECKBOX:\r\n            return changeTodoItemCheckbox(state, action.payload as ICheckboxActionPayload);\r\n        default: return state;\r\n    }\r\n}\r\n\r\nconst loading = (state: IAppState, payload: boolean): IAppState => {\r\n    return {...state, isLoading: payload };\r\n}\r\n\r\nconst createTodoItem = (state: IAppState, payload: ITodoItem): IAppState => {\r\n    return {...state, todos: [...state.todos, payload] };\r\n}\r\n\r\nconst deleteTodoItem = (state: IAppState, payload: ITodoItem): IAppState => {\r\n    let item = _.find(state.todos, payload);\r\n    let newTodo: Array<ITodoItem> = _.filter(state.todos, (todo: ITodoItem) => todo !== item);\r\n    return { ...state, todos: newTodo };\r\n}\r\n\r\nconst changeTodoItemCheckbox = (state: IAppState, payload: ICheckboxActionPayload): IAppState => {\r\n    let idx: number = _.findIndex(state.todos, payload.item);\r\n    let newTodo: Array<ITodoItem> = _.map(state.todos, (todo: ITodoItem, index: number) => {\r\n        if (index === idx) todo.isDone = payload.isChecked;\r\n        return todo;\r\n    });\r\n    return { ...state, todos: newTodo };\r\n}\r\n","import { ITodoItem } from '../models/todo-item';\r\n\r\nexport const todos: Array<ITodoItem> = [\r\n    {\r\n        title: 'Milk',\r\n        description: 'Need to buy milk',\r\n        isDone: false\r\n    },\r\n    {\r\n        title: 'Bread',\r\n        description: 'Need to buy bread',\r\n        isDone: false\r\n    },\r\n    {\r\n        title: 'Butter',\r\n        description: 'Need to buy a butter',\r\n        isDone: false\r\n    },\r\n    {\r\n        title: 'Cheese',\r\n        description: 'Need to buy a cheese',\r\n        isDone: false\r\n    }\r\n];\r\n","import { combineReducers } from 'redux';\r\nimport { todoReducer } from './todo';\r\n\r\nexport const rootReducer = combineReducers({\r\n    todoReducer\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport reportWebVitals from './resources/reportWebVitals';\r\nimport { Core } from './app/core/Core';\r\nimport { store } from './app/redux/store';\r\nimport './app/style/index.scss';\r\n\r\n\r\nconst app: JSX.Element = (\r\n    <Provider store={ store }>\r\n        <Core />\r\n    </Provider>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById('core'));\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}